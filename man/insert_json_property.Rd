% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/insert_json_property.R
\name{insert_json_property}
\alias{insert_json_property}
\title{Insert a Property into Elements of a Nested JSON Array}
\usage{
insert_json_property(
  json_data,
  array_path,
  property_name,
  property_value,
  position_type = "after",
  position_ref = NULL,
  filter_fn = NULL,
  verbose = FALSE
)
}
\arguments{
\item{json_data}{A JSON object (as an R list)}

\item{array_path}{Path to the array as a vector (e.g., c("items", "Test") for items\link{*}.Test\link{*})}

\item{property_name}{Name of the property to insert}

\item{property_value}{Value of the property or a function that is called for each element.
If it's a function, it receives the following parameters: elem, index, parent, parent_index, root}

\item{position_type}{Type of positioning: "after", "before", "position", "first", "last"}

\item{position_ref}{Reference property or position (depending on position_type)}

\item{filter_fn}{Optional function to filter which elements to modify}

\item{verbose}{Whether status messages should be displayed}
}
\value{
The modified JSON data structure
}
\description{
This function enables the insertion of a new property at a specific position
within elements in nested arrays of a JSON structure. This is particularly useful for
modifying complex nested JSON structures with fine-grained control.
}
\details{
The function traverses a JSON structure following a specified path to reach nested arrays.
For each matching element, it inserts a property at the specified position. The property value
can be either a static value or dynamically generated by a function that receives contextual
information about each element.

This function is useful for:
\itemize{
\item Adding metadata to nested array elements
\item Reorganizing properties within elements
\item Batch modifications to complex nested JSON structures
\item Establishing relationships between parent and child elements
}
}
\examples{
# Example JSON as a string
json_str <- '{
  "items": [
    {
      "id": 1,
      "name": "Laptop",
      "Test": [
        {
          "DisplayName": "Test 1",
          "Level": 1
        },
        {
          "DisplayName": "Test 2",
          "Level": 2
        }
      ]
    }
  ]
}'

# Convert to R list
json_data <- jsonlite::fromJSON(json_str, simplifyVector = FALSE)

# Insert "TestId" with value 1 after "DisplayName"
result <- insert_json_property(
  json_data,
  array_path = c("items", "Test"),
  property_name = "TestId",
  property_value = 1,
  position_type = "after",
  position_ref = "DisplayName"
)

# Insert "ItemName" with the name of the parent item
result2 <- insert_json_property(
  json_data,
  array_path = c("items", "Test"),
  property_name = "ItemName",
  property_value = function(elem, index, parent, parent_index, root) {
    return(parent$name)  # Access the name of the parent item
  },
  position_type = "first"
)
}
